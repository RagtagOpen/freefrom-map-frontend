{"ast":null,"code":"var _jsxFileName = \"/home/thadryan/Workspace/nextd3/components/UsMap.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport statesLived from \"../public/data/stateslived.json\";\nimport stateScores from \"../public/data/state-scores.json\";\nimport usData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nclass UsMap extends Component {\n  componentDidMount() {\n    this.statesLived = statesLived;\n    this.stateScores = stateScores;\n    this.usData = usData;\n    this.height = 500;\n    64, 0, 64;\n    this.width = 960;\n    this.colorRange = [// lightest\n    \"rgb(168,0,168)\", \"rgb(128,0,128)\", \"rgb(98,0,98)\", \"rgb(78,0,78)\", \"rgb(58,0,58)\"];\n    this.renderMap();\n  }\n\n  mapScoresToStates(scoreData, usData) {\n    for (var i = 0; i < scoreData.length; i++) {\n      let scoreStateName = scoreData[i].state;\n      var stateScores = scoreData[i].score;\n\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonStateName = usData.features[j].properties.name;\n\n        if (scoreStateName == jsonStateName) {\n          usData.features[j].properties.score = stateScores;\n          break;\n        }\n      }\n    }\n\n    return usData;\n  }\n\n  renderMap() {\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    let height = this.height;\n    let stateScores = this.stateScores; // add the values to the state objects\n    // usData = this.mapStatesToValues(statesLived, usData);\n\n    usData = this.mapScoresToStates(stateScores, usData); // initalize the pojection and path\n\n    let projection = d3.geo.albersUsa().translate([width / 2, height / 2]).scale([1000]);\n    let path = d3.geo.path().projection(projection);\n    let color = d3.scale.linear().range(colorRange);\n    let tooltip = d3.select(\"body\").append(\"div\").style(\"position\", \"absolute\").style(\"z-index\", \"10\").style(\"visibility\", \"hidden\").style(\"background\", \"#000\").text(\"a simple tooltip\");\n    d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).selectAll(\"path\").data(usData.features).enter().append(\"path\").attr(\"d\", path).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n      return color(d.properties.score);\n    }).on('mouseover', function (d) {\n      d3.select(this).style({\n        opacity: '0.75'\n      }).append(\"text\").text(function (d) {\n        console.log(d.properties.name);\n        console.log(d.properties.score);\n        return d.properties.score;\n      });\n      tooltip.transition().duration(200).style('opacity', 1).text(d.properties.score);\n    }).on('mouseout', function (d) {\n      let mouseSelection = d3.select(this).style({\n        opacity: '1.0'\n      }); // mouseSelection.select(\"text\").style({ opacity: '1.0' });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"#\" + this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default UsMap;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/components/UsMap.js"],"names":["React","Component","statesLived","stateScores","usData","d3","UsMap","componentDidMount","height","width","colorRange","renderMap","mapScoresToStates","scoreData","i","length","scoreStateName","state","score","j","features","jsonStateName","properties","name","projection","geo","albersUsa","translate","scale","path","color","linear","range","tooltip","select","append","style","text","attr","selectAll","data","enter","d","on","opacity","console","log","transition","duration","mouseSelection","render","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport statesLived from \"../public/data/stateslived.json\"\nimport stateScores from \"../public/data/state-scores.json\"\nimport usData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass UsMap extends Component {\n\n  componentDidMount() {\n\n\n    this.statesLived = statesLived;\n    this.stateScores = stateScores;\n    this.usData = usData;\n    this.height = 500; (64, 0, 64)\n    this.width = 960;\n    this.colorRange = [\n      // lightest\n      \"rgb(168,0,168)\",\n      \"rgb(128,0,128)\",\n      \"rgb(98,0,98)\",\n      \"rgb(78,0,78)\",\n      \"rgb(58,0,58)\"\n    ]\n    this.renderMap();\n  }\n\n  mapScoresToStates(scoreData, usData) {\n\n    for (var i = 0; i < scoreData.length; i++) {\n      let scoreStateName = scoreData[i].state;\n      var stateScores = scoreData[i].score;\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonStateName = usData.features[j].properties.name;\n        if (scoreStateName == jsonStateName) {\n          usData.features[j].properties.score = stateScores;\n          break;\n        }\n      }\n    }\n    return usData\n  }\n\n  renderMap() {\n\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    let height = this.height;\n    let stateScores = this.stateScores;\n\n    // add the values to the state objects\n    // usData = this.mapStatesToValues(statesLived, usData);\n    usData = this.mapScoresToStates(stateScores, usData)\n\n    // initalize the pojection and path\n    let projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])\n      .scale([1000]);\n\n    let path = d3\n      .geo\n      .path()\n      .projection(projection);\n\n    let color = d3\n      .scale\n      .linear()\n      .range(colorRange);\n\n    let tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background\", \"#000\")\n      .text(\"a simple tooltip\");\n\n    d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .selectAll(\"path\")\n      .data(usData.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"fill\", function (d) {\n        return color(d.properties.score)\n      }).on('mouseover', function (d) {\n        d3.select(this)\n          .style({ opacity: '0.75' })\n          .append(\"text\")\n          .text(function (d) {\n            console.log(d.properties.name)\n            console.log(d.properties.score)\n            return d.properties.score\n          });\n\n        tooltip.transition().duration(200).style('opacity', 1).text(d.properties.score)\n\n      }).on('mouseout', function (d) {\n        let mouseSelection = d3.select(this).style({ opacity: '1.0' });\n        // mouseSelection.select(\"text\").style({ opacity: '1.0' });\n      });\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n\n}\n\nexport default UsMap"]},"metadata":{},"sourceType":"module"}