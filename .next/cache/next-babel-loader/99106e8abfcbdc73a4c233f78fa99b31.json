{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/thadryan/Workspace/nextd3/components/UsMap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport statesLived from \"../public/data/stateslived.json\";\nimport stateScores from \"../public/data/state-scores.json\";\nimport usData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nvar UsMap = /*#__PURE__*/function (_Component) {\n  _inherits(UsMap, _Component);\n\n  var _super = _createSuper(UsMap);\n\n  function UsMap() {\n    _classCallCheck(this, UsMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UsMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.statesLived = statesLived;\n      this.stateScores = stateScores;\n      this.usData = usData;\n      this.height = 500;\n      this.width = 960;\n      this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"];\n      this.renderMap();\n    } // the takes the US data and the States data and adds the\n    // information from the states data to the states in the US objects\n\n  }, {\n    key: \"mapStatesToValues\",\n    value: function mapStatesToValues(statesLived, usData) {\n      for (var i = 0; i < statesLived.length; i++) {\n        var dataState = statesLived[i].state;\n        var dataValue = statesLived[i].visited;\n\n        for (var j = 0; j < usData.features.length; j++) {\n          var jsonState = usData.features[j].properties.name;\n\n          if (dataState == jsonState) {\n            usData.features[j].properties.visited = dataValue;\n            break;\n          }\n        }\n      }\n\n      return usData;\n    }\n  }, {\n    key: \"mapScoresToStates\",\n    value: function mapScoresToStates(scoreData, usData) {\n      for (var i = 0; i < scoreData.length; i++) {\n        // var dataState = statesLived[i].state;\n        // var dataValue = statesLived[i].visited;\n        console.log(scoreData[i].state);\n        console.log(scoreData[i].state); // for (var j = 0; j < usData.features.length; j++) {\n        //   var jsonState = usData.features[j].properties.name;\n        //   if (dataState == jsonState) {\n        //     usData.features[j].properties.visited = dataValue;\n        //     break;\n        //   }\n        // }\n      }\n\n      return usData;\n    }\n  }, {\n    key: \"renderMap\",\n    value: function renderMap() {\n      // just unpacking for tidier variable names downstream\n      var usData = this.usData;\n      var statesLived = this.statesLived;\n      var colorRange = this.colorRange;\n      var width = this.width;\n      var height = this.height;\n      var stateScores = this.stateScores; // add the values to the state objects\n\n      usData = this.mapStatesToValues(statesLived, usData);\n      var scoreData = this.mapScoresToStates(stateScores, usData); // initalize the pojection and path\n\n      var projection = d3.geo.albersUsa().translate([width / 2, height / 2]).scale([1000]);\n      var path = d3.geo.path().projection(projection);\n      var color = d3.scale.linear().range(colorRange);\n      d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).selectAll(\"path\").data(usData.features).enter().append(\"path\").attr(\"d\", path).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n        var haveVisited = d.properties.visited;\n\n        if (haveVisited) {\n          return color(haveVisited);\n        } else {\n          return \"rgb(213,222,217)\";\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"#\" + this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return UsMap;\n}(Component);\n\nexport default UsMap;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/components/UsMap.js"],"names":["React","Component","statesLived","stateScores","usData","d3","UsMap","height","width","colorRange","renderMap","i","length","dataState","state","dataValue","visited","j","features","jsonState","properties","name","scoreData","console","log","mapStatesToValues","mapScoresToStates","projection","geo","albersUsa","translate","scale","path","color","linear","range","select","append","attr","selectAll","data","enter","style","d","haveVisited","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport statesLived from \"../public/data/stateslived.json\"\nimport stateScores from \"../public/data/state-scores.json\"\nimport usData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass UsMap extends Component {\n\n  componentDidMount() {\n\n\n    this.statesLived = statesLived;\n    this.stateScores = stateScores;\n    this.usData = usData;\n    this.height = 500;\n    this.width = 960;\n    this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"]\n\n    this.renderMap();\n  }\n\n  // the takes the US data and the States data and adds the\n  // information from the states data to the states in the US objects\n  mapStatesToValues(statesLived, usData) {\n\n    for (var i = 0; i < statesLived.length; i++) {\n      var dataState = statesLived[i].state;\n      var dataValue = statesLived[i].visited;\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonState = usData.features[j].properties.name;\n        if (dataState == jsonState) {\n          usData.features[j].properties.visited = dataValue;\n          break;\n        }\n      }\n    }\n    return usData\n  }\n\n  mapScoresToStates(scoreData, usData) {\n\n    for (var i = 0; i < scoreData.length; i++) {\n      // var dataState = statesLived[i].state;\n      // var dataValue = statesLived[i].visited;\n      console.log(scoreData[i].state)\n      console.log(scoreData[i].state)\n      // for (var j = 0; j < usData.features.length; j++) {\n      //   var jsonState = usData.features[j].properties.name;\n      //   if (dataState == jsonState) {\n      //     usData.features[j].properties.visited = dataValue;\n      //     break;\n      //   }\n      // }\n    }\n    return usData\n  }\n\n  renderMap() {\n\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    let height = this.height;\n    let stateScores = this.stateScores;\n\n    // add the values to the state objects\n    usData = this.mapStatesToValues(statesLived, usData);\n    let scoreData = this.mapScoresToStates(stateScores, usData)\n\n    // initalize the pojection and path\n    var projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])\n      .scale([1000]);\n\n    var path = d3\n      .geo\n      .path()\n      .projection(projection);\n\n    var color = d3\n      .scale\n      .linear()\n      .range(colorRange);\n\n    d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .selectAll(\"path\")\n      .data(usData.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"fill\", function (d) {\n        let haveVisited = d.properties.visited;\n        if (haveVisited) {\n          return color(haveVisited);\n        } else {\n          return \"rgb(213,222,217)\";\n        }\n      });\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n\n}\n\nexport default UsMap"]},"metadata":{},"sourceType":"module"}