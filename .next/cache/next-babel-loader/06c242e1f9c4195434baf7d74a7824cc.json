{"ast":null,"code":"var _jsxFileName = \"/home/thadryan/Workspace/nextd3/components/UsMap.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport statesLived from \"../public/data/stateslived.json\";\nimport usData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nclass UsMap extends Component {\n  componentDidMount() {\n    this.statesLived = statesLived;\n    this.usData = usData;\n    this.height = 500;\n    this.width = 960;\n    this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"];\n    this.renderMap();\n  }\n\n  renderMap() {\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    var height = this.height; // initalize the pojection and path\n\n    var projection = d3.geo.albersUsa().translate([width / 2, height / 2]).scale([1000]);\n    var path = d3.geo.path().projection(projection);\n    var color = d3.scale.linear().range(colorRange);\n    var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n    for (var i = 0; i < statesLived.length; i++) {\n      var dataState = statesLived[i].state;\n      var dataValue = statesLived[i].visited;\n\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonState = usData.features[j].properties.name;\n\n        if (dataState == jsonState) {\n          usData.features[j].properties.visited = dataValue;\n          break;\n        }\n      }\n    }\n\n    svg.selectAll(\"path\").data(usData.features).enter().append(\"path\").attr(\"d\", path).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n      let haveVisited = d.properties.visited;\n\n      if (haveVisited) {\n        return color(haveVisited);\n      } else {\n        return \"rgb(213,222,217)\";\n      }\n    });\n  } // end renderMap()\n\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"#\" + this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default UsMap;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/components/UsMap.js"],"names":["React","Component","statesLived","usData","d3","UsMap","componentDidMount","height","width","colorRange","renderMap","projection","geo","albersUsa","translate","scale","path","color","linear","range","svg","select","append","attr","i","length","dataState","state","dataValue","visited","j","features","jsonState","properties","name","selectAll","data","enter","style","d","haveVisited","render","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport statesLived from \"../public/data/stateslived.json\"\nimport usData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass UsMap extends Component {\n\n  componentDidMount() {\n\n\n    this.statesLived = statesLived;\n    this.usData = usData;\n    this.height = 500;\n    this.width = 960;\n    this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"]\n\n    this.renderMap();\n  }\n\n  renderMap() {\n\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    var height = this.height;\n\n    // initalize the pojection and path\n    var projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])\n      .scale([1000]);\n\n    var path = d3\n      .geo\n      .path()\n      .projection(projection);\n\n    var color = d3\n      .scale\n      .linear()\n      .range(colorRange);\n\n\n    var svg = d3\n      .select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n\n\n    for (var i = 0; i < statesLived.length; i++) {\n\n      var dataState = statesLived[i].state;\n      var dataValue = statesLived[i].visited;\n\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonState = usData.features[j].properties.name;\n\n        if (dataState == jsonState) {\n          usData.features[j].properties.visited = dataValue;\n          break;\n        }\n      }\n    }\n\n    svg.selectAll(\"path\")\n      .data(usData.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"fill\", function (d) {\n        let haveVisited = d.properties.visited;\n        if (haveVisited) {\n          return color(haveVisited);\n        } else {\n          return \"rgb(213,222,217)\";\n        }\n      });\n\n  } // end renderMap()\n\n\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n\n}\n\nexport default UsMap"]},"metadata":{},"sourceType":"module"}