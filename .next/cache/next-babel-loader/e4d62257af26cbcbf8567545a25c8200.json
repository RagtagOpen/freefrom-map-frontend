{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/thadryan/Workspace/nextd3/pages/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport geoData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nvar Chart = /*#__PURE__*/function (_Component) {\n  _inherits(Chart, _Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Mounting Chart Component...\");\n      this.geoData = geoData;\n      this.drawChart();\n    }\n  }, {\n    key: \"drawChart\",\n    value: function drawChart() {\n      var json = this.geoData; // confirm we've gotten access to the states\n\n      for (var j = 0; j < json.features.length; j++) {\n        var jsonState = json.features[j].properties.name;\n        console.log(jsonState);\n      } //Width and height of map\n\n\n      var width = 960;\n      var height = 500; // D3 Projection\n\n      var projection = d3.geo.albersUsa().translate([width / 2, height / 2]) // translate to center of screen\n      .scale([1000]); // scale things down so see entire US\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"#\" + this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/pages/Chart.js"],"names":["React","Component","geoData","d3","Chart","console","log","drawChart","json","j","features","length","jsonState","properties","name","width","height","projection","geo","albersUsa","translate","scale","props","id"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAGMC,K;;;;;;;;;;;;;wCAEgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,WAAKJ,OAAL,GAAeA,OAAf;AACA,WAAKK,SAAL;AACD;;;gCAEW;AAEV,UAAIC,IAAI,GAAG,KAAKN,OAAhB,CAFU,CAIV;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,QAAL,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7C,YAAIG,SAAS,GAAGJ,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBI,UAAjB,CAA4BC,IAA5C;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACD,OARS,CASV;;;AACA,UAAIG,KAAK,GAAG,GAAZ;AACA,UAAIC,MAAM,GAAG,GAAb,CAXU,CAaV;;AACA,UAAIC,UAAU,GAAGd,EAAE,CAACe,GAAH,CAAOC,SAAP,GACdC,SADc,CACJ,CAACL,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,CADI,EACwB;AADxB,OAEdK,KAFc,CAER,CAAC,IAAD,CAFQ,CAAjB,CAdU,CAgBiB;AAE5B;;;6BAEQ;AACP,aAAO;AAAK,QAAA,EAAE,EAAE,MAAM,KAAKC,KAAL,CAAWC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA9BiBtB,S;;AAkCpB,eAAeG,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport geoData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass Chart extends Component {\n\n  componentDidMount() {\n    console.log(\"Mounting Chart Component...\")\n    this.geoData = geoData;\n    this.drawChart();\n  }\n\n  drawChart() {\n\n    let json = this.geoData;\n\n    // confirm we've gotten access to the states\n    for (var j = 0; j < json.features.length; j++) {\n      var jsonState = json.features[j].properties.name;\n      console.log(jsonState);\n    }\n    //Width and height of map\n    var width = 960;\n    var height = 500;\n\n    // D3 Projection\n    var projection = d3.geo.albersUsa()\n      .translate([width / 2, height / 2])    // translate to center of screen\n      .scale([1000]);          // scale things down so see entire US\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id}></div>\n  }\n\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}