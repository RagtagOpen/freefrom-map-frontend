{"ast":null,"code":"var _jsxFileName = \"/home/thadryan/Workspace/nextd3/pages/Chart.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport geoData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nclass Chart extends Component {\n  componentDidMount() {\n    console.log(\"Mounting Chart Component...\");\n    this.geoData = geoData;\n    this.drawChart();\n  }\n\n  drawChart() {\n    let json = this.geoData; // confirm we've gotten access to the states\n\n    for (var j = 0; j < json.features.length; j++) {\n      var jsonState = json.features[j].properties.name;\n      console.log(jsonState);\n    } //Width and height of map\n\n\n    var width = 960;\n    var height = 500; // D3 Projection\n\n    var projection = d3.geo.albersUsa().translate([width / 2, height / 2]) // translate to center of screen\n    .scale([1000]); // scale things down so see entire US\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"#\" + this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/pages/Chart.js"],"names":["React","Component","geoData","d3","Chart","componentDidMount","console","log","drawChart","json","j","features","length","jsonState","properties","name","width","height","projection","geo","albersUsa","translate","scale","render","props","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE5BI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,SAAKL,OAAL,GAAeA,OAAf;AACA,SAAKM,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AAEV,QAAIC,IAAI,GAAG,KAAKP,OAAhB,CAFU,CAIV;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,QAAL,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7C,UAAIG,SAAS,GAAGJ,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBI,UAAjB,CAA4BC,IAA5C;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACD,KARS,CASV;;;AACA,QAAIG,KAAK,GAAG,GAAZ;AACA,QAAIC,MAAM,GAAG,GAAb,CAXU,CAaV;;AACA,QAAIC,UAAU,GAAGf,EAAE,CAChBgB,GADc,CAEdC,SAFc,GAGdC,SAHc,CAGJ,CAACL,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,CAHI,EAGoB;AAHpB,KAIdK,KAJc,CAIR,CAAC,IAAD,CAJQ,CAAjB,CAdU,CAkBO;AAElB;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,EAAE,EAAE,MAAM,KAAKC,KAAL,CAAWC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhC2B;;AAoC9B,eAAerB,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport geoData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass Chart extends Component {\n\n  componentDidMount() {\n    console.log(\"Mounting Chart Component...\")\n    this.geoData = geoData;\n    this.drawChart();\n  }\n\n  drawChart() {\n\n    let json = this.geoData;\n\n    // confirm we've gotten access to the states\n    for (var j = 0; j < json.features.length; j++) {\n      var jsonState = json.features[j].properties.name;\n      console.log(jsonState);\n    }\n    //Width and height of map\n    var width = 960;\n    var height = 500;\n\n    // D3 Projection\n    var projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])// translate to center of screen\n      .scale([1000]);// scale things down so see entire US\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id}></div>\n  }\n\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}