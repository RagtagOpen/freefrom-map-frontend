{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/thadryan/Workspace/nextd3/components/UsMap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StatesLived from \"../public/data/stateslived.json\";\nimport USData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nvar UsMap = /*#__PURE__*/function (_Component) {\n  _inherits(UsMap, _Component);\n\n  var _super = _createSuper(UsMap);\n\n  function UsMap() {\n    _classCallCheck(this, UsMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UsMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.statesLived = StatesLived;\n      this.usData = USData;\n      this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"];\n      this.renderMap();\n    }\n  }, {\n    key: \"renderMap\",\n    value: function renderMap() {\n      // just unpacking for tidier variable names downstream\n      var usData = this.usData;\n      var statesLived = this.statesLived;\n      var colorRange = this.colorRange;\n      var width = 960;\n      var height = 500;\n      var projection = d3.geo.albersUsa().translate([width / 2, height / 2]).scale([1000]);\n      var path = d3.geo.path().projection(projection);\n      var color = d3.scale.linear().range();\n      var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n      for (var i = 0; i < statesLived.length; i++) {\n        var dataState = statesLived[i].state;\n        var dataValue = statesLived[i].visited;\n\n        for (var j = 0; j < usData.features.length; j++) {\n          var jsonState = usData.features[j].properties.name;\n\n          if (dataState == jsonState) {\n            usData.features[j].properties.visited = dataValue;\n            break;\n          }\n        }\n      }\n\n      svg.selectAll(\"path\").data(usData.features).enter().append(\"path\").attr(\"d\", path).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n        var haveVisited = d.properties.visited;\n\n        if (haveVisited) {\n          return color(haveVisited);\n        } else {\n          return \"rgb(213,222,217)\";\n        }\n      });\n    } // end renderMap()\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"#\" + this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return UsMap;\n}(Component);\n\nexport default UsMap;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/components/UsMap.js"],"names":["React","Component","StatesLived","USData","d3","UsMap","statesLived","usData","colorRange","renderMap","width","height","projection","geo","albersUsa","translate","scale","path","color","linear","range","svg","select","append","attr","div","style","i","length","dataState","state","dataValue","visited","j","features","jsonState","properties","name","selectAll","data","enter","d","haveVisited","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StatesLived from \"../public/data/stateslived.json\"\nimport USData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass UsMap extends Component {\n\n  componentDidMount() {\n\n    this.statesLived = StatesLived;\n    this.usData = USData;\n\n    this.colorRange = [\"rgb(213,222,217)\", \"rgb(69,173,168)\", \"rgb(84,36,55)\", \"rgb(217,91,67)\"]\n\n    this.renderMap();\n  }\n\n  renderMap() {\n\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived\n    let colorRange = this.colorRange\n\n    var width = 960;\n    var height = 500;\n\n    var projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])\n      .scale([1000]);\n\n    var path = d3\n      .geo\n      .path()\n      .projection(projection);\n\n    var color = d3\n      .scale\n      .linear()\n      .range();\n\n\n    var svg = d3\n      .select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    var div = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    for (var i = 0; i < statesLived.length; i++) {\n\n      var dataState = statesLived[i].state;\n      var dataValue = statesLived[i].visited;\n\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonState = usData.features[j].properties.name;\n\n        if (dataState == jsonState) {\n          usData.features[j].properties.visited = dataValue;\n          break;\n        }\n      }\n    }\n\n    svg.selectAll(\"path\")\n      .data(usData.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"fill\", function (d) {\n        let haveVisited = d.properties.visited;\n        if (haveVisited) {\n          return color(haveVisited);\n        } else {\n          return \"rgb(213,222,217)\";\n        }\n      });\n\n  } // end renderMap()\n\n\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n\n}\n\nexport default UsMap"]},"metadata":{},"sourceType":"module"}