{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/thadryan/Workspace/nextd3/components/UsMap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport statesLived from \"../public/data/stateslived.json\";\nimport stateScores from \"../public/data/state-scores.json\";\nimport usData from \"../public/data/us-states.json\";\nimport * as d3 from \"d3\";\n\nvar UsMap = /*#__PURE__*/function (_Component) {\n  _inherits(UsMap, _Component);\n\n  var _super = _createSuper(UsMap);\n\n  function UsMap() {\n    _classCallCheck(this, UsMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UsMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.statesLived = statesLived;\n      this.stateScores = stateScores;\n      this.usData = usData;\n      this.height = 500;\n      64, 0, 64;\n      this.width = 960;\n      this.colorRange = [// lightest\n      \"rgb(168,0,168)\", \"rgb(128,0,128)\", \"rgb(98,0,98)\", \"rgb(78,0,78)\", \"rgb(58,0,58)\"];\n      this.renderMap();\n    }\n  }, {\n    key: \"mapScoresToStates\",\n    value: function mapScoresToStates(scoreData, usData) {\n      for (var i = 0; i < scoreData.length; i++) {\n        var scoreStateName = scoreData[i].state;\n        var stateScores = scoreData[i].score;\n\n        for (var j = 0; j < usData.features.length; j++) {\n          var jsonStateName = usData.features[j].properties.name;\n\n          if (scoreStateName == jsonStateName) {\n            usData.features[j].properties.score = stateScores;\n            break;\n          }\n        }\n      }\n\n      return usData;\n    }\n  }, {\n    key: \"renderMap\",\n    value: function renderMap() {\n      // just unpacking for tidier variable names downstream\n      var usData = this.usData;\n      var statesLived = this.statesLived;\n      var colorRange = this.colorRange;\n      var width = this.width;\n      var height = this.height;\n      var stateScores = this.stateScores; // add the values to the state objects\n      // usData = this.mapStatesToValues(statesLived, usData);\n\n      usData = this.mapScoresToStates(stateScores, usData); // initalize the pojection and path\n\n      var projection = d3.geo.albersUsa().translate([width / 2, height / 2]).scale([1000]);\n      var path = d3.geo.path().projection(projection);\n      var color = d3.scale.linear().range(colorRange);\n      var tooltip = d3.select('body').append('div').attr('id', 'tooltip').attr('style', 'position: absolute; opacity: 0;');\n      d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).selectAll(\"path\").data(usData.features).enter().append(\"path\").attr(\"d\", path).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n        return color(d.properties.score);\n      }).on('mouseover', function (d) {\n        d3.select(this).style({\n          opacity: '0.75'\n        }).append(\"text\").text(function (d) {\n          console.log(d.properties.name);\n          console.log(d.properties.score);\n          return d.properties.score;\n        });\n        tooltip.transition().duration(200).style('opacity', 1).text(d.properties.name + ': ' + d.properties.score);\n      }).on('mouseout', function (d) {\n        var mouseSelection = d3.select(this).style({\n          opacity: '1.0'\n        }); // mouseSelection.select(\"text\").style({ opacity: '1.0' });\n      }).on(\"click\", function (d) {\n        console.log(\"Click event detected for \", d.properties.name);\n        tooltip.transition().duration(200).style('opacity', 1).text(\"Click detected on\" + d.properties.name + \", create card here\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"#\" + this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return UsMap;\n}(Component);\n\nexport default UsMap;","map":{"version":3,"sources":["/home/thadryan/Workspace/nextd3/components/UsMap.js"],"names":["React","Component","statesLived","stateScores","usData","d3","UsMap","height","width","colorRange","renderMap","scoreData","i","length","scoreStateName","state","score","j","features","jsonStateName","properties","name","mapScoresToStates","projection","geo","albersUsa","translate","scale","path","color","linear","range","tooltip","select","append","attr","selectAll","data","enter","style","d","on","opacity","text","console","log","transition","duration","mouseSelection","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport statesLived from \"../public/data/stateslived.json\"\nimport stateScores from \"../public/data/state-scores.json\"\nimport usData from \"../public/data/us-states.json\"\nimport * as d3 from \"d3\"\n\n\nclass UsMap extends Component {\n\n  componentDidMount() {\n\n\n    this.statesLived = statesLived;\n    this.stateScores = stateScores;\n    this.usData = usData;\n    this.height = 500; (64, 0, 64)\n    this.width = 960;\n    this.colorRange = [\n      // lightest\n      \"rgb(168,0,168)\",\n      \"rgb(128,0,128)\",\n      \"rgb(98,0,98)\",\n      \"rgb(78,0,78)\",\n      \"rgb(58,0,58)\"\n    ]\n    this.renderMap();\n  }\n\n  mapScoresToStates(scoreData, usData) {\n\n    for (var i = 0; i < scoreData.length; i++) {\n      let scoreStateName = scoreData[i].state;\n      var stateScores = scoreData[i].score;\n      for (var j = 0; j < usData.features.length; j++) {\n        var jsonStateName = usData.features[j].properties.name;\n        if (scoreStateName == jsonStateName) {\n          usData.features[j].properties.score = stateScores;\n          break;\n        }\n      }\n    }\n    return usData\n  }\n\n  renderMap() {\n\n    // just unpacking for tidier variable names downstream\n    let usData = this.usData;\n    let statesLived = this.statesLived;\n    let colorRange = this.colorRange;\n    let width = this.width;\n    let height = this.height;\n    let stateScores = this.stateScores;\n\n    // add the values to the state objects\n    // usData = this.mapStatesToValues(statesLived, usData);\n    usData = this.mapScoresToStates(stateScores, usData)\n\n    // initalize the pojection and path\n    let projection = d3\n      .geo\n      .albersUsa()\n      .translate([width / 2, height / 2])\n      .scale([1000]);\n\n    let path = d3\n      .geo\n      .path()\n      .projection(projection);\n\n    let color = d3\n      .scale\n      .linear()\n      .range(colorRange);\n\n    let tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('id', 'tooltip')\n      .attr('style', 'position: absolute; opacity: 0;');\n\n    d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .selectAll(\"path\")\n      .data(usData.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"fill\", function (d) {\n        return color(d.properties.score)\n      }).on('mouseover', function (d) {\n        d3.select(this)\n          .style({ opacity: '0.75' })\n          .append(\"text\")\n          .text(function (d) {\n            console.log(d.properties.name)\n            console.log(d.properties.score)\n            return d.properties.score\n          });\n\n        tooltip\n          .transition()\n          .duration(200)\n          .style('opacity', 1)\n          .text(d.properties.name + ': ' + d.properties.score)\n\n      }).on('mouseout', function (d) {\n        let mouseSelection = d3.select(this).style({ opacity: '1.0' });\n        // mouseSelection.select(\"text\").style({ opacity: '1.0' });\n      }).on(\"click\", function (d) {\n        console.log(\"Click event detected for \", d.properties.name)\n\n        tooltip\n          .transition()\n          .duration(200)\n          .style('opacity', 1)\n          .text(\"Click detected on\" + d.properties.name + \", create card here\")\n      });\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n\n}\n\nexport default UsMap"]},"metadata":{},"sourceType":"module"}